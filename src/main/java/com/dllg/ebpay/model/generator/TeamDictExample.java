package com.dllg.ebpay.model.generator;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TeamDictExample {
    /**
     * This field was generated by MyBatis Generator, do not modify.
     * This field corresponds to the database table team_dict
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator, do not modify.
     * This field corresponds to the database table team_dict
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator, do not modify.
     * This field corresponds to the database table team_dict
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public TeamDictExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator, do not modify.
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     *   team_dict
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTeamDictTeamIdIsNull() {
            addCriterion("team_dict_team_id is null");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdIsNotNull() {
            addCriterion("team_dict_team_id is not null");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdEqualTo(String value) {
            addCriterion("team_dict_team_id =", value, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdNotEqualTo(String value) {
            addCriterion("team_dict_team_id <>", value, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdGreaterThan(String value) {
            addCriterion("team_dict_team_id >", value, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdGreaterThanOrEqualTo(String value) {
            addCriterion("team_dict_team_id >=", value, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdLessThan(String value) {
            addCriterion("team_dict_team_id <", value, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdLessThanOrEqualTo(String value) {
            addCriterion("team_dict_team_id <=", value, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdLike(String value) {
            addCriterion("team_dict_team_id like", value, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdNotLike(String value) {
            addCriterion("team_dict_team_id not like", value, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdIn(List<String> values) {
            addCriterion("team_dict_team_id in", values, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdNotIn(List<String> values) {
            addCriterion("team_dict_team_id not in", values, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdBetween(String value1, String value2) {
            addCriterion("team_dict_team_id between", value1, value2, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictTeamIdNotBetween(String value1, String value2) {
            addCriterion("team_dict_team_id not between", value1, value2, "teamDictTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdIsNull() {
            addCriterion("team_dict_dict_id is null");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdIsNotNull() {
            addCriterion("team_dict_dict_id is not null");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdEqualTo(String value) {
            addCriterion("team_dict_dict_id =", value, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdNotEqualTo(String value) {
            addCriterion("team_dict_dict_id <>", value, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdGreaterThan(String value) {
            addCriterion("team_dict_dict_id >", value, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdGreaterThanOrEqualTo(String value) {
            addCriterion("team_dict_dict_id >=", value, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdLessThan(String value) {
            addCriterion("team_dict_dict_id <", value, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdLessThanOrEqualTo(String value) {
            addCriterion("team_dict_dict_id <=", value, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdLike(String value) {
            addCriterion("team_dict_dict_id like", value, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdNotLike(String value) {
            addCriterion("team_dict_dict_id not like", value, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdIn(List<String> values) {
            addCriterion("team_dict_dict_id in", values, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdNotIn(List<String> values) {
            addCriterion("team_dict_dict_id not in", values, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdBetween(String value1, String value2) {
            addCriterion("team_dict_dict_id between", value1, value2, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictDictIdNotBetween(String value1, String value2) {
            addCriterion("team_dict_dict_id not between", value1, value2, "teamDictDictId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeIsNull() {
            addCriterion("team_dict_create_time is null");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeIsNotNull() {
            addCriterion("team_dict_create_time is not null");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeEqualTo(Date value) {
            addCriterion("team_dict_create_time =", value, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeNotEqualTo(Date value) {
            addCriterion("team_dict_create_time <>", value, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeGreaterThan(Date value) {
            addCriterion("team_dict_create_time >", value, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("team_dict_create_time >=", value, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeLessThan(Date value) {
            addCriterion("team_dict_create_time <", value, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("team_dict_create_time <=", value, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeIn(List<Date> values) {
            addCriterion("team_dict_create_time in", values, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeNotIn(List<Date> values) {
            addCriterion("team_dict_create_time not in", values, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeBetween(Date value1, Date value2) {
            addCriterion("team_dict_create_time between", value1, value2, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("team_dict_create_time not between", value1, value2, "teamDictCreateTime");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdIsNull() {
            addCriterion("team_dict_create_user_id is null");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdIsNotNull() {
            addCriterion("team_dict_create_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdEqualTo(String value) {
            addCriterion("team_dict_create_user_id =", value, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdNotEqualTo(String value) {
            addCriterion("team_dict_create_user_id <>", value, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdGreaterThan(String value) {
            addCriterion("team_dict_create_user_id >", value, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("team_dict_create_user_id >=", value, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdLessThan(String value) {
            addCriterion("team_dict_create_user_id <", value, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdLessThanOrEqualTo(String value) {
            addCriterion("team_dict_create_user_id <=", value, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdLike(String value) {
            addCriterion("team_dict_create_user_id like", value, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdNotLike(String value) {
            addCriterion("team_dict_create_user_id not like", value, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdIn(List<String> values) {
            addCriterion("team_dict_create_user_id in", values, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdNotIn(List<String> values) {
            addCriterion("team_dict_create_user_id not in", values, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdBetween(String value1, String value2) {
            addCriterion("team_dict_create_user_id between", value1, value2, "teamDictCreateUserId");
            return (Criteria) this;
        }

        public Criteria andTeamDictCreateUserIdNotBetween(String value1, String value2) {
            addCriterion("team_dict_create_user_id not between", value1, value2, "teamDictCreateUserId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator, do not modify.
     *   team_dict
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     *   team_dict
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}