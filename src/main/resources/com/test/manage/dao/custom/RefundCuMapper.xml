<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.manage.dao.custom.RefundCuMapper">
    <resultMap id="BaseResultMap" type="com.test.manage.model.generator.Refund">
        <result column="refund_id" jdbcType="CHAR" property="refundId"/>
        <result column="refund_trade_bank_no" jdbcType="VARCHAR" property="refundTradeBankNo"/>
        <result column="refund_bank_no" jdbcType="VARCHAR" property="refundBankNo"/>
        <result column="refund_proposer" jdbcType="VARCHAR" property="refundProposer"/>
        <result column="refund_company" jdbcType="VARCHAR" property="refundCompany"/>
        <result column="refund_status" jdbcType="CHAR" property="refundStatus"/>
        <result column="refund_back_url" jdbcType="VARCHAR" property="refundBackUrl"/>
        <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount"/>
        <result column="refund_fee" jdbcType="DECIMAL" property="refundFee"/>
        <result column="refund_remark" jdbcType="VARCHAR" property="refundRemark"/>
        <result column="refund_apply_for_data" jdbcType="TIMESTAMP" property="refundApplyForData"/>
        <result column="refund_update_data" jdbcType="TIMESTAMP" property="refundUpdateData"/>
    </resultMap>

    <sql id="Base_Column_List">
    refund_id, refund_trade_bank_no, refund_bank_no, refund_proposer, refund_company,
    refund_status, refund_back_url, refund_amount, refund_fee, refund_remark, refund_apply_for_data,
    refund_update_data
  </sql>


    <select id="RefundList" resultType="map">
        select *
        from refund r
        left join account_sub_trade t on r.refund_trade_bank_no = t.account_sub_trade_bank_no
        left join business_trade bt on bt.business_trade_account_sub_trade_id = t.account_sub_trade_id
        where(
                (t.account_is_deal = 1 and t.account_sub_trade_account_sub_id = #{accountSubId}) or
                (t.account_is_deal = 0 and t.account_sub_trade_in_account_sub_id = #{accountSubId})
              ) and t.account_sub_trade_type = 1 and t.account_sub_trade_is_delete = 0
        <if test="startTime!=null">
            and r.refund_apply_for_data <![CDATA[ >= ]]> #{startTime}
        </if>
        <if test="endTime!=null">
            and r.refund_apply_for_data <![CDATA[ <= ]]> DATE_ADD(#{endTime},INTERVAL 1 DAY)
        </if>
        <if test="refundCompany !=null and refundCompany != '' ">
            and r.refund_company = #{refundCompany}
        </if>
        <if test="businessFrom !=null and businessFrom != '' ">
            and bt.business_trade_business_from = #{businessFrom}
        </if>
        <if test="refundStatus !=null and refundStatus != '' ">
            and r.refund_status = #{refundStatus}
        </if>
    </select>


    <select id="getRefundDetail" parameterType="java.lang.String" resultType="java.util.Map">
          SELECT
                CASE ast.account_is_deal WHEN '0' THEN asub2.account_sub_name  WHEN '1' THEN asub.account_sub_name  END AS accountSubName,
                rf.refund_status refundStatus,
                rf.refund_apply_for_data refundApplyForData,
                rf.refund_proposer refundProposer,
                rf.refund_company refundCompany,
                '流水单号',
                rf.refund_amount refundAmount,
                bt.business_trade_business_no businessTradeBusinessNo,
                bt.business_trade_business_from businessTradeBusinessFrom,
                bt.business_trade_business_type businessTradeBusinessType,
                bt.business_trade_clearing_type businessTradeClearingType,
                rf.refund_remark refundRemark
            FROM
                refund rf
                LEFT JOIN account_sub_trade ast ON ast.account_sub_trade_bank_no = rf.refund_trade_bank_no
                LEFT JOIN business_trade bt ON bt.business_trade_account_sub_trade_id = ast.account_sub_trade_id
                LEFT JOIN account_sub asub ON asub.account_sub_id = ast.account_sub_trade_account_sub_id
                LEFT JOIN account_sub asub2 ON asub2.account_sub_id = ast.account_sub_trade_in_account_sub_id
            WHERE
                rf.refund_id = #{refundId}
    </select>



</mapper>