<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.manage.dao.custom.ResourceCuMapper">
    <resultMap id="BaseResultMap" type="com.test.manage.model.generator.Resource">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="resource_id" jdbcType="CHAR" property="resourceId"/>
        <result column="parent_resource_id" jdbcType="CHAR" property="parentResourceId"/>
        <result column="resource_name" jdbcType="VARCHAR" property="resourceName"/>
        <result column="resource_en_name" jdbcType="VARCHAR" property="resourceEnName"/>
        <result column="resource_value" jdbcType="VARCHAR" property="resourceValue"/>
        <result column="resource_icon" jdbcType="VARCHAR" property="resourceIcon"/>
        <result column="resource_type" jdbcType="INTEGER" property="resourceType"/>
        <result column="resource_rank" jdbcType="INTEGER" property="resourceRank"/>
        <result column="resource_index" jdbcType="INTEGER" property="resourceIndex"/>
        <result column="resource_status" jdbcType="INTEGER" property="resourceStatus"/>
        <result column="resource_create_time" jdbcType="TIMESTAMP" property="resourceCreateTime"/>
        <result column="resource_create_user_id" jdbcType="CHAR" property="resourceCreateUserId"/>
        <result column="resource_update_time" jdbcType="TIMESTAMP" property="resourceUpdateTime"/>
        <result column="resource_update_user_id" jdbcType="CHAR" property="resourceUpdateUserId"/>
        <result column="resource_is_delete" jdbcType="BIT" property="resourceIsDelete"/>
    </resultMap>

    <sql id="Base_Column_List">
    resource_id, parent_resource_id, resource_name, resource_en_name, resource_value, 
    resource_icon, resource_type, resource_rank, resource_index, resource_status, resource_create_time, 
    resource_create_user_id, resource_update_time, resource_update_user_id, resource_is_delete
  </sql>

    <select id="getRoleResources" resultMap="BaseResultMap">
    SELECT resource_id,parent_resource_id,resource_name,resource_index
        FROM resource
        INNER JOIN role_resource ON  role_resource.role_resource_resource_id = resource.resource_id
        INNER JOIN role ON role_resource.role_resource_role_id = role.role_id
        WHERE resource_is_delete=0
        AND role.role_id = #{roleId}
        ORDER BY resource_index
  </select>

    <resultMap id="MenuResultMap" type="com.test.manage.model.dto.Menu">
        <id column="resource_id" jdbcType="CHAR" property="resourceId"/>
        <result column="parent_resource_id" jdbcType="CHAR" property="parentResourceId"/>
        <result column="resource_name" jdbcType="VARCHAR" property="resourceName"/>
        <result column="resource_en_name" jdbcType="VARCHAR" property="resourceEnName"/>
        <result column="resource_value" jdbcType="VARCHAR" property="resourceValue"/>
        <result column="resource_icon" jdbcType="VARCHAR" property="resourceIcon"/>
        <result column="resource_type" jdbcType="INTEGER" property="resourceType"/>
        <result column="resource_rank" jdbcType="INTEGER" property="resourceRank"/>
        <result column="resource_index" jdbcType="INTEGER" property="resourceIndex"/>
        <result column="resource_status" jdbcType="INTEGER" property="resourceStatus"/>
        <collection property="children" column="resource_id" ofType="com.test.manage.model.dto.Menu"
                    select="children"></collection>
    </resultMap>

    <sql id="Menu_Column_List">
        resource_id, parent_resource_id, resource_name, resource_en_name, resource_value,
        resource_icon, resource_type, resource_rank,resource_index, resource_status
    </sql>

    <select id="root" resultMap="MenuResultMap">
        SELECT
        <include refid="Menu_Column_List"/>
        FROM resource WHERE  resource_id = #{resource_id}
        AND resource_is_delete=0
    </select>

    <select id="getResouceTreeData" resultMap="MenuResultMap">
        SELECT
        <include refid="Menu_Column_List"/>
        FROM resource WHERE  (parent_resource_id is null or parent_resource_id = '')
        AND resource_is_delete=0
    </select>

    <select id="children" resultMap="MenuResultMap">
        SELECT
        <include refid="Menu_Column_List"/>
        FROM resource WHERE parent_resource_id=#{resource_id}
        AND resource_is_delete=0 ORDER BY resource_index
    </select>

    <select id="getFrontMenu" parameterType="java.util.Map" resultType="com.test.manage.model.dto.Menu">
        select distinct re.* from resource re
        left join role_resource rore on re.resource_id = rore.role_resource_resource_id
        left join role ro on ro.role_id = rore.role_resource_role_id
        where parent_resource_id = #{parentResourceId} and ro.role_id in
        (
          select role_id from role
          left join user_role on user_role_role_id = role_id
          where  user_role_user_id = #{userId} and role_is_delete = 0
        )  and (re.resource_index is not null and re.resource_index != '') order by re.resource_rank ,re.resource_index
    </select>
    <select id="getFrontButton" parameterType="java.lang.String" resultType="java.lang.String">
        select distinct concat(pre.resource_en_name,'_',re.resource_en_name) btn from resource re
        left join role_resource rore on re.resource_id = rore.role_resource_resource_id
        left join role ro on ro.role_id = rore.role_resource_role_id
        left join  resource pre on pre.resource_id = re.parent_resource_id
        where re.resource_rank = 4 and ro.role_id in
        (
          select role_id from role
          left join user_role on user_role_role_id = role_id
          where  user_role_user_id = #{userId} and role_is_delete = 0
        )
    </select>

</mapper>