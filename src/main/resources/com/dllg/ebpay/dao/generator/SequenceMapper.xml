<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dllg.ebpay.dao.generator.SequenceMapper">
  <resultMap id="BaseResultMap" type="com.dllg.ebpay.model.generator.Sequence">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="sequence_id" jdbcType="INTEGER" property="sequenceId" />
    <result column="sequence_name" jdbcType="VARCHAR" property="sequenceName" />
    <result column="sequence_desc" jdbcType="VARCHAR" property="sequenceDesc" />
    <result column="sequence_create_time" jdbcType="TIMESTAMP" property="sequenceCreateTime" />
    <result column="sequence_update_time" jdbcType="TIMESTAMP" property="sequenceUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    sequence_id, sequence_name, sequence_desc, sequence_create_time, sequence_update_time
  </sql>
  <select id="selectByExample" parameterType="com.dllg.ebpay.model.generator.SequenceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sequence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dllg.ebpay.model.generator.SequenceExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sequence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dllg.ebpay.model.generator.Sequence">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sequence (sequence_id, sequence_name, sequence_desc, 
      sequence_create_time, sequence_update_time
      )
    values (#{sequenceId,jdbcType=INTEGER}, #{sequenceName,jdbcType=VARCHAR}, #{sequenceDesc,jdbcType=VARCHAR}, 
      #{sequenceCreateTime,jdbcType=TIMESTAMP}, #{sequenceUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dllg.ebpay.model.generator.Sequence">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sequence
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sequenceId != null">
        sequence_id,
      </if>
      <if test="sequenceName != null">
        sequence_name,
      </if>
      <if test="sequenceDesc != null">
        sequence_desc,
      </if>
      <if test="sequenceCreateTime != null">
        sequence_create_time,
      </if>
      <if test="sequenceUpdateTime != null">
        sequence_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sequenceId != null">
        #{sequenceId,jdbcType=INTEGER},
      </if>
      <if test="sequenceName != null">
        #{sequenceName,jdbcType=VARCHAR},
      </if>
      <if test="sequenceDesc != null">
        #{sequenceDesc,jdbcType=VARCHAR},
      </if>
      <if test="sequenceCreateTime != null">
        #{sequenceCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sequenceUpdateTime != null">
        #{sequenceUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dllg.ebpay.model.generator.SequenceExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from sequence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sequence
    <set>
      <if test="record.sequenceId != null">
        sequence_id = #{record.sequenceId,jdbcType=INTEGER},
      </if>
      <if test="record.sequenceName != null">
        sequence_name = #{record.sequenceName,jdbcType=VARCHAR},
      </if>
      <if test="record.sequenceDesc != null">
        sequence_desc = #{record.sequenceDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.sequenceCreateTime != null">
        sequence_create_time = #{record.sequenceCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sequenceUpdateTime != null">
        sequence_update_time = #{record.sequenceUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sequence
    set sequence_id = #{record.sequenceId,jdbcType=INTEGER},
      sequence_name = #{record.sequenceName,jdbcType=VARCHAR},
      sequence_desc = #{record.sequenceDesc,jdbcType=VARCHAR},
      sequence_create_time = #{record.sequenceCreateTime,jdbcType=TIMESTAMP},
      sequence_update_time = #{record.sequenceUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>