<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dllg.ebpay.dao.generator.RefundMapper">
  <resultMap id="BaseResultMap" type="com.dllg.ebpay.model.generator.Refund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="refund_id" jdbcType="CHAR" property="refundId" />
    <result column="refund_order_no" jdbcType="VARCHAR" property="refundOrderNo" />
    <result column="refund_trade_bank_no" jdbcType="VARCHAR" property="refundTradeBankNo" />
    <result column="refund_bank_no" jdbcType="VARCHAR" property="refundBankNo" />
    <result column="refund_proposer" jdbcType="VARCHAR" property="refundProposer" />
    <result column="refund_company" jdbcType="VARCHAR" property="refundCompany" />
    <result column="refund_status" jdbcType="CHAR" property="refundStatus" />
    <result column="refund_false_reason" jdbcType="CHAR" property="refundFalseReason" />
    <result column="refund_back_url" jdbcType="VARCHAR" property="refundBackUrl" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="refund_fee" jdbcType="DECIMAL" property="refundFee" />
    <result column="refund_remark" jdbcType="VARCHAR" property="refundRemark" />
    <result column="refund_apply_for_data" jdbcType="TIMESTAMP" property="refundApplyForData" />
    <result column="refund_update_data" jdbcType="TIMESTAMP" property="refundUpdateData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    refund_id, refund_order_no, refund_trade_bank_no, refund_bank_no, refund_proposer, 
    refund_company, refund_status, refund_false_reason, refund_back_url, refund_amount, 
    refund_fee, refund_remark, refund_apply_for_data, refund_update_data
  </sql>
  <select id="selectByExample" parameterType="com.dllg.ebpay.model.generator.RefundExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from refund
    where refund_id = #{refundId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from refund
    where refund_id = #{refundId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dllg.ebpay.model.generator.RefundExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dllg.ebpay.model.generator.Refund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into refund (refund_id, refund_order_no, refund_trade_bank_no, 
      refund_bank_no, refund_proposer, refund_company, 
      refund_status, refund_false_reason, refund_back_url, 
      refund_amount, refund_fee, refund_remark, 
      refund_apply_for_data, refund_update_data
      )
    values (#{refundId,jdbcType=CHAR}, #{refundOrderNo,jdbcType=VARCHAR}, #{refundTradeBankNo,jdbcType=VARCHAR}, 
      #{refundBankNo,jdbcType=VARCHAR}, #{refundProposer,jdbcType=VARCHAR}, #{refundCompany,jdbcType=VARCHAR}, 
      #{refundStatus,jdbcType=CHAR}, #{refundFalseReason,jdbcType=CHAR}, #{refundBackUrl,jdbcType=VARCHAR}, 
      #{refundAmount,jdbcType=DECIMAL}, #{refundFee,jdbcType=DECIMAL}, #{refundRemark,jdbcType=VARCHAR}, 
      #{refundApplyForData,jdbcType=TIMESTAMP}, #{refundUpdateData,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dllg.ebpay.model.generator.Refund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="refundOrderNo != null">
        refund_order_no,
      </if>
      <if test="refundTradeBankNo != null">
        refund_trade_bank_no,
      </if>
      <if test="refundBankNo != null">
        refund_bank_no,
      </if>
      <if test="refundProposer != null">
        refund_proposer,
      </if>
      <if test="refundCompany != null">
        refund_company,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="refundFalseReason != null">
        refund_false_reason,
      </if>
      <if test="refundBackUrl != null">
        refund_back_url,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="refundRemark != null">
        refund_remark,
      </if>
      <if test="refundApplyForData != null">
        refund_apply_for_data,
      </if>
      <if test="refundUpdateData != null">
        refund_update_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refundId != null">
        #{refundId,jdbcType=CHAR},
      </if>
      <if test="refundOrderNo != null">
        #{refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundTradeBankNo != null">
        #{refundTradeBankNo,jdbcType=VARCHAR},
      </if>
      <if test="refundBankNo != null">
        #{refundBankNo,jdbcType=VARCHAR},
      </if>
      <if test="refundProposer != null">
        #{refundProposer,jdbcType=VARCHAR},
      </if>
      <if test="refundCompany != null">
        #{refundCompany,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=CHAR},
      </if>
      <if test="refundFalseReason != null">
        #{refundFalseReason,jdbcType=CHAR},
      </if>
      <if test="refundBackUrl != null">
        #{refundBackUrl,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundRemark != null">
        #{refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="refundApplyForData != null">
        #{refundApplyForData,jdbcType=TIMESTAMP},
      </if>
      <if test="refundUpdateData != null">
        #{refundUpdateData,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dllg.ebpay.model.generator.RefundExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update refund
    <set>
      <if test="record.refundId != null">
        refund_id = #{record.refundId,jdbcType=CHAR},
      </if>
      <if test="record.refundOrderNo != null">
        refund_order_no = #{record.refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundTradeBankNo != null">
        refund_trade_bank_no = #{record.refundTradeBankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundBankNo != null">
        refund_bank_no = #{record.refundBankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundProposer != null">
        refund_proposer = #{record.refundProposer,jdbcType=VARCHAR},
      </if>
      <if test="record.refundCompany != null">
        refund_company = #{record.refundCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=CHAR},
      </if>
      <if test="record.refundFalseReason != null">
        refund_false_reason = #{record.refundFalseReason,jdbcType=CHAR},
      </if>
      <if test="record.refundBackUrl != null">
        refund_back_url = #{record.refundBackUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundFee != null">
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundRemark != null">
        refund_remark = #{record.refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.refundApplyForData != null">
        refund_apply_for_data = #{record.refundApplyForData,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundUpdateData != null">
        refund_update_data = #{record.refundUpdateData,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update refund
    set refund_id = #{record.refundId,jdbcType=CHAR},
      refund_order_no = #{record.refundOrderNo,jdbcType=VARCHAR},
      refund_trade_bank_no = #{record.refundTradeBankNo,jdbcType=VARCHAR},
      refund_bank_no = #{record.refundBankNo,jdbcType=VARCHAR},
      refund_proposer = #{record.refundProposer,jdbcType=VARCHAR},
      refund_company = #{record.refundCompany,jdbcType=VARCHAR},
      refund_status = #{record.refundStatus,jdbcType=CHAR},
      refund_false_reason = #{record.refundFalseReason,jdbcType=CHAR},
      refund_back_url = #{record.refundBackUrl,jdbcType=VARCHAR},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      refund_remark = #{record.refundRemark,jdbcType=VARCHAR},
      refund_apply_for_data = #{record.refundApplyForData,jdbcType=TIMESTAMP},
      refund_update_data = #{record.refundUpdateData,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dllg.ebpay.model.generator.Refund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update refund
    <set>
      <if test="refundOrderNo != null">
        refund_order_no = #{refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundTradeBankNo != null">
        refund_trade_bank_no = #{refundTradeBankNo,jdbcType=VARCHAR},
      </if>
      <if test="refundBankNo != null">
        refund_bank_no = #{refundBankNo,jdbcType=VARCHAR},
      </if>
      <if test="refundProposer != null">
        refund_proposer = #{refundProposer,jdbcType=VARCHAR},
      </if>
      <if test="refundCompany != null">
        refund_company = #{refundCompany,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=CHAR},
      </if>
      <if test="refundFalseReason != null">
        refund_false_reason = #{refundFalseReason,jdbcType=CHAR},
      </if>
      <if test="refundBackUrl != null">
        refund_back_url = #{refundBackUrl,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundFee != null">
        refund_fee = #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundRemark != null">
        refund_remark = #{refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="refundApplyForData != null">
        refund_apply_for_data = #{refundApplyForData,jdbcType=TIMESTAMP},
      </if>
      <if test="refundUpdateData != null">
        refund_update_data = #{refundUpdateData,jdbcType=TIMESTAMP},
      </if>
    </set>
    where refund_id = #{refundId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dllg.ebpay.model.generator.Refund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update refund
    set refund_order_no = #{refundOrderNo,jdbcType=VARCHAR},
      refund_trade_bank_no = #{refundTradeBankNo,jdbcType=VARCHAR},
      refund_bank_no = #{refundBankNo,jdbcType=VARCHAR},
      refund_proposer = #{refundProposer,jdbcType=VARCHAR},
      refund_company = #{refundCompany,jdbcType=VARCHAR},
      refund_status = #{refundStatus,jdbcType=CHAR},
      refund_false_reason = #{refundFalseReason,jdbcType=CHAR},
      refund_back_url = #{refundBackUrl,jdbcType=VARCHAR},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      refund_fee = #{refundFee,jdbcType=DECIMAL},
      refund_remark = #{refundRemark,jdbcType=VARCHAR},
      refund_apply_for_data = #{refundApplyForData,jdbcType=TIMESTAMP},
      refund_update_data = #{refundUpdateData,jdbcType=TIMESTAMP}
    where refund_id = #{refundId,jdbcType=CHAR}
  </update>
</mapper>